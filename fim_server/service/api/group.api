syntax = "v1"

info (
	title:   "type title here"
	desc:    "type desc here"
	author:  "type author here"
	email:   "type email here"
	version: "type version here"
)

type (
	GroupCreateRequest {
		UserId     uint   `header:"User-Id"`
		Mode       int8   `json:"mode,optional"` // 模式 1 直接创建   2 创建模式
		Name       string `json:"name,optional"`
		IsSearch   bool   `json:"is_search,optional"`
		Size       int    `json:"size,optional"`
		UserIdList []uint `json:"user_id_list,optional"`
	}
	GroupCreateResponse  {}
)

type (
	GroupInfoRequest {
		UserId uint `header:"User-Id"`
		Id     int8 `path:"id"`
	}
	UserInfo {
		UserId uint   `json:"user_id"`
		Name   string `json:"name"`
		Avatar string `json:"avatar"`
	}
	GroupInfoResponse {
		GroupId          uint       `json:"group_id"`
		Name             string     `json:"name"`
		Sign             string     `json:"sign"`
		Avatar           string     `json:"avatar"`
		MemberCount      int        `json:"member_count"`
		MemberOnlinCount int        `json:"member_onlin_count"`
		Leader           UserInfo   `json:"leader"` // 群主
		AdminList        []UserInfo `json:"admin_list"`
		Role             int8       `json:"role"` // 角色   1 群主 2 群管理员 3 群成员
	}
)

type (
	AuthQuestion {
		Problem1 *string `json:"problem1"`
		Problem2 *string `json:"problem2"`
		Problem3 *string `json:"problem3"`
		Answer1  *string `json:"answer1"`
		Answer2  *string `json:"answer2"`
		Answer3  *string `json:"answer3"`
	}
	GroupUpdateRequest {
		UserId             uint          `header:"User-Id"`
		Id                 int8          `json:"id"`
		Name               string        `json:"name,optional" conf:"name"` // 群名
		Avatar             string        `json:"avatar,optional" conf:"avatar"` // 群头像
		Sign               string        `json:"sign,optional" conf:"sign"` // 群简介
		IsSearch           *bool         `json:"is_search,optional" conf:"is_search"` // is搜索
		IsInvite           *bool         `json:"is_invite,optional" conf:"is_invite"` // is邀请
		IsTemporarySession *bool         `json:"is_temporary_session,optional" conf:"is_temporary_session"` // is临时会话
		IsForbiddenSpeech  *bool         `json:"is_forbidden_speech,optional" conf:"is_forbidden_speech"` // is禁言
		AuthMessage        int8          `json:"auth_message,optional" conf:"auth_message"` // 群验证
		AuthQuestion       *AuthQuestion `json:"auth_question,optional" conf:"auth_question"` // 群验证问题
	}
	GroupUpdateResponse  {}
)

type (
	GroupDeleteRequest {
		UserId uint `header:"User-Id"`
		Id     int8 `path:"id"`
	}
	GroupDeleteResponse  {}
)

type (
	GroupMemberRequest {
		UserId uint   `header:"User-Id"`
		Id     uint   `form:"id"`
		Page   int    `form:"page,optional"`
		Limit  int    `form:"limit,optional"`
		Sort   string `form:"sort,optional"`
	}
	GroupMemberInfo {
		UserId         uint   `json:"user_id"`
		Name           string `json:"name"`
		Avatar         string `json:"avatar"`
		InOnline       bool   `json:"in_online"`
		Role           int8   `json:"role"`
		MemberName     string `json:"member_name"`
		CreatedAt      string `json:"created_at"`
		NewMessageDate string `json:"new_message_date"`
	}
	GroupMemberResponse {
		Total int64             `json:"total"`
		List  []GroupMemberInfo `json:"list"`
	}
)

type (
	GroupMemberDeleteRequest {
		UserId   uint `header:"User-Id"`
		Id       uint `form:"id"`
		MemberId uint `form:"member_id"`
	}
	GroupMemberDeleteResponse  {}
)

type (
	GroupMemberAddRequest {
		UserId       uint   `header:"User-Id"`
		Id           uint   `json:"id"`
		MemberIdList []uint `json:"member_id_list"`
	}
	GroupMemberAddResponse  {}
)

type (
	GroupMemberNameRequest {
		UserId   uint   `header:"User-Id"`
		Id       uint   `json:"id"`
		MemberId uint   `json:"member_id"`
		Name     string `json:"name"`
	}
	GroupMemberNameResponse  {}
)

type (
	GroupMemberRoleRequest {
		UserId   uint `header:"User-Id"`
		Id       uint `json:"id"`
		MemberId uint `json:"member_id"`
		Role     int8 `json:"role"`
	}
	GroupMemberRoleResponse  {}
)

type (
	GroupFriendsListRequest {
		UserId   uint `header:"User-Id"`
		Id       uint `json:"id"`
		MemberId uint `json:"member_id"`
	}
	GroupFriendsListResponse {
		UserId    uint   `json:"user_id"`
		Avatar    string `json:"avatar"`
		Name      string `json:"name"`
		IsInGroup bool   `json:"is_in_group"`
	}
)

service group {
	@handler GroupCreate
	post /api/group/group (GroupCreateRequest) returns (GroupCreateResponse) // 创建群

	@handler GroupInfo
	get /api/group/group/:id (GroupInfoRequest) returns (GroupInfoResponse) // 创建群

	@handler GroupUpdate
	put /api/group/group (GroupUpdateRequest) returns (GroupUpdateResponse) // 群更新

	@handler GroupDelete
	delete /api/group/group/:id (GroupDeleteRequest) returns (GroupDeleteResponse) // 群解散

	@handler GroupMember
	get /api/group/member (GroupMemberRequest) returns (GroupMemberResponse) // 群成员

	@handler GroupMemberDelete
	delete /api/group/member (GroupMemberDeleteRequest) returns (GroupMemberDeleteResponse) // 踢出群聊

	@handler GroupMemberAdd
	post /api/group/member (GroupMemberAddRequest) returns (GroupMemberAddResponse) // 邀请进入群聊

	@handler GroupMemberName
	put /api/group/member/name (GroupMemberNameRequest) returns (GroupMemberNameResponse) // 群成员修改名称

	@handler GroupMemberRole
	put /api/group/member/role (GroupMemberRoleRequest) returns (GroupMemberRoleResponse) // 群成员修改权限

	@handler GroupFriendsList
	put /api/group/friends (GroupFriendsListRequest) returns (GroupFriendsListResponse) // 我的好友哪些在群里面
}

