// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type AuthQuestion struct {
	Problem1 *string `json:"problem1"`
	Problem2 *string `json:"problem2"`
	Problem3 *string `json:"problem3"`
	Answer1  *string `json:"answer1"`
	Answer2  *string `json:"answer2"`
	Answer3  *string `json:"answer3"`
}

type GroupCreateRequest struct {
	UserId     uint   `header:"User-Id"`
	Mode       int8   `json:"mode,optional"` // 模式 1 直接创建   2 创建模式
	Name       string `json:"name,optional"`
	IsSearch   bool   `json:"is_search,optional"`
	Size       int    `json:"size,optional"`
	UserIdList []uint `json:"user_id_list,optional"`
}

type GroupCreateResponse struct {
}

type GroupDeleteRequest struct {
	UserId uint `header:"User-Id"`
	Id     int8 `path:"id"`
}

type GroupDeleteResponse struct {
}

type GroupInfoRequest struct {
	UserId uint `header:"User-Id"`
	Id     int8 `path:"id"`
}

type GroupInfoResponse struct {
	GroupId          uint       `json:"group_id"`
	Name             string     `json:"name"`
	Sign             string     `json:"sign"`
	Avatar           string     `json:"avatar"`
	MemberCount      int        `json:"member_count"`
	MemberOnlinCount int        `json:"member_onlin_count"`
	Leader           UserInfo   `json:"leader"` // 群主
	AdminList        []UserInfo `json:"admin_list"`
	Role             int8       `json:"role"` // 角色   1 群主 2 群管理员 3 群成员
}

type GroupMemberInfo struct {
	UserId         uint   `json:"user_id"`
	Name           string `json:"name"`
	Avatar         string `json:"avatar"`
	InOnline       bool   `json:"in_online"`
	Role           int8   `json:"role"`
	MemberName     string `json:"member_name"`
	CreatedAt      string `json:"created_at"`
	NewMessageDate string `json:"new_message_date"`
}

type GroupMemberRequest struct {
	UserId uint   `header:"User-Id"`
	Id     uint   `form:"id"`
	Page   int    `form:"page,optional"`
	Limit  int    `form:"limit,optional"`
	Sort   string `form:"sort,optional"`
}

type GroupMemberResponse struct {
	Total int64             `json:"total"`
	List  []GroupMemberInfo `json:"list"`
}

type GroupUpdateRequest struct {
	UserId             uint          `header:"User-Id"`
	Id                 int8          `json:"id"`
	Name               string        `json:"name,optional" conf:"name"`                                 // 群名
	Avatar             string        `json:"avatar,optional" conf:"avatar"`                             // 群头像
	Sign               string        `json:"sign,optional" conf:"sign"`                                 // 群简介
	IsSearch           *bool         `json:"is_search,optional" conf:"is_search"`                       // is搜索
	IsInvite           *bool         `json:"is_invite,optional" conf:"is_invite"`                       // is邀请
	IsTemporarySession *bool         `json:"is_temporary_session,optional" conf:"is_temporary_session"` // is临时会话
	IsForbiddenSpeech  *bool         `json:"is_forbidden_speech,optional" conf:"is_forbidden_speech"`   // is禁言
	AuthMessage        int8          `json:"auth_message,optional" conf:"auth_message"`                 // 群验证
	AuthQuestion       *AuthQuestion `json:"auth_question,optional" conf:"auth_question"`               // 群验证问题
}

type GroupUpdateResponse struct {
}

type UserInfo struct {
	UserId uint   `json:"user_id"`
	Name   string `json:"name"`
	Avatar string `json:"avatar"`
}
